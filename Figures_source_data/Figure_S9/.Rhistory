mutate(diffc = cut(`all`, c(-Inf, 0, 0.1, Inf))) %>%
mutate(diffc_m = replace(diffc, diffc=="(0,0.1]", NA)) %>%
ggplot2::ggplot(., aes(y = dLR, x = n)) +
geom_violin() +
geom_path(
aes(group = TF_name, colour = diffc_m),
size = 0.7, alpha = 0.5,
position = position_jitter(width = 0.1, seed = 3922)
) +
geom_point(alpha=0.7, shape=21, size=2, position = position_jitter(width = 0.1, seed = 3922),
colour = "black") +
scale_color_manual(name = "diffc_m",
values = c("(-Inf,0]" = "cyan",
"(0.1, Inf]" = "magenta"),
labels = c("≤ 0", "> 0.1"), na.translate = F)+
stat_summary(fun.y=median, geom="point", size=2, color="red") +
ylab("ΔauROC to the best PWM") +
xlab("Number of features")+
geom_hline(yintercept = 0, linetype="dotted")+
theme_minimal(base_size = 21) +
theme(panel.grid = element_line(size = 0.5)) +
guides(color=guide_legend("ΔauROC"))
c
library(Cairo)
Cairo(file='Figure_S8H_CHS_ROC.pdf', type="pdf", width=200, height=200, units="mm")
c
dev.off()
mex_dbd <- read.delim("./mex_dbd.tsv", header=FALSE, comment.char="#")
theme_set(theme_get() + theme(text = element_text(family = 'Arial')))
mex_dbd <- read.delim("./mex_dbd.tsv", header=FALSE, comment.char="#")
theme_set(theme_get() + theme(text = element_text(family = 'Arial')))
Figure 1
##### CHS ####
data1 <- read.csv("./Figure_S9_train_on_CHS_predict_on_GHTS_nodup_RR.txt")
setwd("~/Desktop/MEX-ArChIPelago/Figures_source_data/Figure_S9")
##### CHS ####
data1 <- read.csv("./Figure_S9_train_on_CHS_predict_on_GHTS_nodup_RR.txt")
data_CHS = data1
data_CHS %>% dplyr::select(c("Seq_count_shades", "Seq_count_alien", "Seq_count_random", "Seq_count_positives", "TF_name")) %>%
melt(id.vars = c("TF_name"),
measure.vars = c("Seq_count_shades", "Seq_count_positives")) %>%  #"Seq_count_alien", "Seq_count_random")) %>%
ggplot(aes(x = value, fill=variable)) +
geom_density(alpha = .5)+
theme_minimal(base_size = 21)+
theme(axis.text.x = element_text(angle=45, hjust = 1))+ scale_y_sqrt()+
ylab("Density") +
xlab("Size of the set")
data1 <- read.csv("./Figure_S9_train_on_GHTS_predict_on_CHS_nodup_RR.txt")
data_GHTS = data1
data_GHTS %>% dplyr::select(c("Seq_count_shades", "Seq_count_alien", "Seq_count_random", "Seq_count_positives", "TF_name")) %>%
melt(id.vars = c("TF_name"),
measure.vars = c("Seq_count_shades", "Seq_count_positives")) %>%  #"Seq_count_alien", "Seq_count_random")) %>%
ggplot(aes(x = value, fill=variable)) +
geom_density(alpha = .5)+
theme_minimal(base_size = 21)+
theme(axis.text.x = element_text(angle=45, hjust = 1))+ scale_y_sqrt()+
ylab("Density") +
xlab("Size of the set")
library(reshape)
xxyy = data_CHS %>% merge(data_GHTS, by="TF_name") %>% dplyr::select(c("TF_name", "Seq_count_positives.x", "Seq_count_positives.y"))
colnames(xxyy) = c("TF_name", "CHS", "GHTS")
df = xxyy %>% melt(id.vars = c("TF_name"),
measure.vars = c("CHS", "GHTS"))
cdat = df %>%
group_by(variable) %>%
mutate(mean_x = mean(value))
c = df%>%
ggplot(aes(x = value, fill=variable)) +
geom_density(alpha = .5)+
theme_minimal(base_size = 21)+
theme(axis.text.x = element_text(angle=45, hjust = 1))+
ylab("Density") +
xlab("Size of the set")  +
geom_vline(data=cdat, aes(xintercept=mean_x,  colour=variable),
linetype="dashed", size=1)+
labs(fill = "Positive set") +
guides(colour="none")+
theme(panel.grid = element_line(size = 0.5))
library(Cairo)
Cairo(file='Figure_S9I_positives.pdf', type="pdf", width=300, height=100, units="mm")
c
dev.off()
library(reshape)
xxyy = data_CHS %>% merge(data_GHTS, by="TF_name") %>% dplyr::select(c("TF_name", "Seq_count_random.x", "Seq_count_random.y"))
colnames(xxyy) = c("TF_name", "CHS", "GHTS")
df = xxyy %>% melt(id.vars = c("TF_name"),
measure.vars = c("CHS", "GHTS"))
cdat = df %>%
group_by(variable) %>%
mutate(mean_x = mean(value))
c = df%>%
ggplot(aes(x = value, fill=variable)) +
geom_density(alpha = .5)+
theme_minimal(base_size = 21)+
theme(axis.text.x = element_text(angle=45, hjust = 1))+
ylab("Density") +
xlab("Size of the set")  +
geom_vline(data=cdat, aes(xintercept=mean_x,  colour=variable),
linetype="dashed", size=1)+
labs(fill = "Random set") +
guides(colour="none")
library(Cairo)
Cairo(file='Figure_S9I_randoms.pdf', type="pdf", width=300, height=100, units="mm")
c
dev.off()
mex_dbd <- read.delim("./mex_dbd.tsv", header=FALSE, comment.char="#")
theme_set(theme_get() + theme(text = element_text(family = 'Arial')))
##### CHS ####
data1 <- read.csv("./Figure_S9_train_on_CHS_predict_on_GHTS_nodup_RR.txt")
data2 <- read.csv("./Figure_S9_train_on_CHS_predict_on_GHTS_nodup_RF.txt")
data3 <- read.csv("./Figure_S9_train_on_CHS_predict_on_GHTS_nodup_RS.txt")
data1$`Negative set` = "Random"
##### CHS ####
data1 <- read.csv("./Figure_S9_train_on_CHS_predict_on_GHTS_nodup_RR.txt")
data2 <- read.csv("./Figure_S9_train_on_CHS_predict_on_GHTS_nodup_RF.txt")
data3 <- read.csv("./Figure_S9_train_on_CHS_predict_on_GHTS_nodup_RS.txt")
data1$`Negative set` = "Random"
data2$`Negative set` = "Aliens"
data3$`Negative set` = "Shades"
df.list <- list(data1, data2, data3)
res <- lapply(df.list, function(x) subset(x, select = c("TF_name",
"roc_auc_test_M_PWM", "roc_auc_test_M",
"pr_auc_test_M_PWM", "pr_auc_test_M", "Negative set")))
df <- do.call("rbind", res)
data = df %>%
mutate(ROC_delta_M = roc_auc_test_M-roc_auc_test_M_PWM, PR_delta_M = pr_auc_test_M-pr_auc_test_M_PWM) %>%
group_by(TF_name) %>%
summarise(ROC_delta_M=mean(ROC_delta_M), PR_delta_M=mean(PR_delta_M)) %>%
ungroup() %>%
merge(data1 %>% dplyr::select(c("Seq_count_positives", "Count", "TF_name")))
df = df %>%
merge(data1 %>% dplyr::select(c("Seq_count_positives", "Count", "TF_name")))
data = data %>% merge(mex_dbd, by.y="V1", by.x="TF_name")
data$TF_family = data$V2
data = data %>% filter(!TF_name %in% c("FLYWCH1", "CAMTA2"))
my_pal <- function(range = c(1, 6)) {
force(range)
function(x) scales::rescale(x, to = range, from = c(0, 1))
}
c = data %>%
arrange(desc(Seq_count_positives)) %>%
mutate(TF_name = factor(TF_name, TF_name)) %>%
ggplot(aes(x=PR_delta_M, y=ROC_delta_M, size=Seq_count_positives, fill=Count)) + #
geom_point(alpha=0.5, shape=21, color="black") +
scale_size(range = c(1, 15), breaks= c(500, 1000, 5000, 10000, 50000),
#labels = c(5*10^2, 10^3, 5*10^3, 10^4, 5*10^4),
name="Size of \nthe positive \nset") +
scale_fill_viridis(discrete=F, option="C", name="Number of \nPWMs") +
theme_minimal(base_size = 21) +
theme(legend.position="right",
legend.box="vertical",
legend.margin=margin())+
ylab("\u0394auROC") +
xlab("\u0394auPRC") +
geom_hline(yintercept = 0, linetype="dotted") +
geom_vline(xintercept = 0, linetype="dotted") +
geom_text_repel(data = subset(data, (ROC_delta_M < 0)|(ROC_delta_M>0.15)|(PR_delta_M<0)|(PR_delta_M>0.25)),
aes(label = TF_name),
point.padding = 1,
min.segment.length = 3,
max.time = 1, max.iter = 1e5,
#box.padding = 0.3,
segment.curvature = -0.1,
#segment.ncp = 3,
segment.angle = 20,
size=5)+
guides(color = guide_legend(order=1),
size = guide_legend(order=2),
shape = "none")
c
a = df %>%
arrange(desc(Seq_count_positives)) %>%
ggplot(aes(x=roc_auc_test_M_PWM, y=roc_auc_test_M, color=`Negative set`)) + #
geom_point(alpha=0.7, shape=21, size=5)+
theme_minimal(base_size = 21) +
theme(legend.position="none",
axis.text.x=element_text(angle=90, vjust = 0.5))+
ylab("auROC") +
xlab("auROC best PWM") +
expand_limits(x=0, y=0) +
geom_abline(intercept = 0, linetype="dotted") +
guides(color=guide_legend(nrow=3, byrow=TRUE))
a = ggMarginal(a, type = "histogram",
#margins = "x",
#color = "gray",
fill = "white",
size=8, groupColour = TRUE)
b = df %>%
arrange(desc(Seq_count_positives))  %>%
ggplot(aes(x=pr_auc_test_M_PWM, y=pr_auc_test_M, color=`Negative set`)) + #
geom_point(alpha=0.7, shape=21, size=5)+
theme_minimal(base_size = 21) +
theme(legend.position="none",
axis.text.x=element_text(angle=90, vjust = 0.5))+
ylab("auPRC") +
xlab("auPRC best PWM") +
expand_limits(x=0, y=0) +
geom_abline(intercept = 0, linetype="dotted") +
guides(color=guide_legend(nrow=3, byrow=TRUE))
b = ggMarginal(b, type = "histogram",
#margins = "x",
#color = "gray",
fill = "white",
size=8, groupColour = TRUE)
plot = ggarrange(
ggarrange(a, b, nrow = 2, ncol = 1, labels = c("A", "B"),
font.label=list(size=25), vjust = -0.3
#heights = c(1, 1.5)
),
ggarrange(c,
labels = c("C"),
ncol = 1, nrow = 1,
font.label=list(size=25), vjust = -0.3),
widths = c(1, 2.5), ncol = 2, nrow = 1
)
image = annotate_figure(plot, top = text_grob("",
color = "black", face = "bold", size = 25))
library(Cairo)
Cairo(file='Figure_S9ABC.pdf', type="pdf", width=310, height=185, units="mm")
image
dev.off()
mex_dbd <- read.delim("./mex_dbd.tsv", header=FALSE, comment.char="#")
theme_set(theme_get() + theme(text = element_text(family = 'Arial')))
##### CHS ####
data1 <- read.csv("./Figure_S9_train_on_GHTS_predict_on_CHS_nodup_RR.txt")
data2 <- read.csv("./Figure_S9_train_on_GHTS_predict_on_CHS_nodup_RF.txt")
data3 <- read.csv("./Figure_S9_train_on_GHTS_predict_on_CHS_nodup_RS.txt")
data1$`Negative set` = "Random"
data2$`Negative set` = "Aliens"
data3$`Negative set` = "Shades"
df.list <- list(data1, data2, data3)
res <- lapply(df.list, function(x) subset(x, select = c("TF_name",
"roc_auc_test_M_PWM", "roc_auc_test_M",
"pr_auc_test_M_PWM", "pr_auc_test_M", "Negative set")))
df <- do.call("rbind", res)
data = df %>%
mutate(ROC_delta_M = roc_auc_test_M-roc_auc_test_M_PWM, PR_delta_M = pr_auc_test_M-pr_auc_test_M_PWM) %>%
group_by(TF_name) %>%
summarise(ROC_delta_M=mean(ROC_delta_M), PR_delta_M=mean(PR_delta_M)) %>%
ungroup() %>%
merge(data1 %>% dplyr::select(c("Seq_count_positives", "Count", "TF_name")))
df = df %>%
merge(data1 %>% dplyr::select(c("Seq_count_positives", "Count", "TF_name")))
data = data %>% merge(mex_dbd, by.y="V1", by.x="TF_name")
data$TF_family = data$V2
data = data %>% filter(!TF_name %in% c("FLYWCH1", "CAMTA2"))
my_pal <- function(range = c(1, 6)) {
force(range)
function(x) scales::rescale(x, to = range, from = c(0, 1))
}
c = data %>%
arrange(desc(Seq_count_positives)) %>%
mutate(TF_name = factor(TF_name, TF_name)) %>%
ggplot(aes(x=PR_delta_M, y=ROC_delta_M, size=Seq_count_positives, fill=Count)) + #
geom_point(alpha=0.5, shape=21, color="black") +
scale_size(range = c(1, 15), breaks= c(500, 1000, 5000, 10000, 50000),
#labels = c(5*10^2, 10^3, 5*10^3, 10^4, 5*10^4),
name="Size of \nthe positive \nset") +
scale_fill_viridis(discrete=F, option="C", name="Number of \nPWMs") +
theme_minimal(base_size = 21) +
theme(legend.position="right",
legend.box="vertical",
legend.margin=margin())+
ylab("\u0394auROC") +
xlab("\u0394auPRC") +
geom_hline(yintercept = 0, linetype="dotted") +
geom_vline(xintercept = 0, linetype="dotted") +
geom_text_repel(data = subset(data, (ROC_delta_M < -0.1)|(ROC_delta_M>0.08)|(PR_delta_M< -0.1)|(PR_delta_M>0.15)),
aes(label = TF_name),
point.padding = 1,
min.segment.length = 3,
max.time = 1, max.iter = 1e5,
#box.padding = 0.3,
segment.curvature = -0.1,
#segment.ncp = 3,
segment.angle = 20,
size=5)+
guides(color = guide_legend(order=1),
size = guide_legend(order=2),
shape = "none")
c
a = df %>%
arrange(desc(Seq_count_positives)) %>%
ggplot(aes(x=roc_auc_test_M_PWM, y=roc_auc_test_M, color=`Negative set`)) + #
geom_point(alpha=0.7, shape=21, size=5)+
theme_minimal(base_size = 21) +
theme(legend.position="none",
axis.text.x=element_text(angle=90, vjust = 0.5))+
ylab("auROC") +
xlab("auROC best PWM") +
expand_limits(x=0, y=0) +
geom_abline(intercept = 0, linetype="dotted") +
guides(color=guide_legend(nrow=3, byrow=TRUE))
a = ggMarginal(a, type = "histogram",
#margins = "x",
#color = "gray",
fill = "white",
size=8, groupColour = TRUE)
b = df %>%
arrange(desc(Seq_count_positives))  %>%
ggplot(aes(x=pr_auc_test_M_PWM, y=pr_auc_test_M, color=`Negative set`)) + #
geom_point(alpha=0.7, shape=21, size=5)+
theme_minimal(base_size = 21) +
theme(legend.position="none",
axis.text.x=element_text(angle=90, vjust = 0.5))+
ylab("auPRC") +
xlab("auPRC best PWM") +
expand_limits(x=0, y=0) +
geom_abline(intercept = 0, linetype="dotted") +
guides(color=guide_legend(nrow=3, byrow=TRUE))
b = ggMarginal(b, type = "histogram",
#margins = "x",
#color = "gray",
fill = "white",
size=8, groupColour = TRUE)
plot = ggarrange(
ggarrange(a, b, nrow = 2, ncol = 1, labels = c("D", "E"),
font.label=list(size=25), vjust = -0.3
#heights = c(1, 1.5)
),
ggarrange(c,
labels = c("F"),
ncol = 1, nrow = 1,
font.label=list(size=25), vjust = -0.3),
widths = c(1, 2.5), ncol = 2, nrow = 1
)
image = annotate_figure(plot, top = text_grob("",
color = "black", face = "bold", size = 25))
library(Cairo)
Cairo(file='Figure_S9DEF.pdf', type="pdf", width=310, height=185, units="mm")
image
dev.off()
theme_set(theme_get() + theme(text = element_text(family = 'Arial')))
data_summary <- function(x) {
m <- mean(x)
ymin <- m-sd(x)
ymax <- m+sd(x)
return(c(y=m,ymin=ymin,ymax=ymax))
}
df_violin_CHS <- read.csv("./Figure_S9_df_violin_CHS_GHTS_pr.csv")
df_violin_CHS$TF_name <- as.factor(df_violin_CHS$TF_name)
library(MASS)
library(reshape2)
library(reshape)
c = df_violin_CHS %>% dplyr::select(c("TF_name", "roc_auc_test_M_PWM", "dLR", "PWM")) %>%
dcast(TF_name~PWM, value.var = "dLR") %>%
merge(df_violin_CHS, by="TF_name") %>%
mutate( n=factor(Count,levels=c(2,4,8,16,"all")) ) %>%
dplyr::arrange(TF_name, n) %>%
dplyr::group_by(TF_name) %>%
mutate(diffc = cut(`all`, c(-Inf, 0, 0.1, Inf))) %>%
mutate(diffc_m = replace(diffc, diffc=="(0,0.1]", NA)) %>%
ggplot2::ggplot(., aes(y = dLR, x = n)) +
geom_violin() +
geom_path(
aes(group = TF_name, colour = diffc_m),
size = 0.7, alpha = 0.5,
position = position_jitter(width = 0.1, seed = 3922)
) +
geom_point(alpha=0.7, shape=21, size=2, position = position_jitter(width = 0.1, seed = 3922),
colour = "black") +
scale_color_manual(name = "diffc_m",
values = c("(-Inf,0]" = "cyan",
"(0.1, Inf]" = "magenta"),
labels = c("≤ 0", "> 0.1"), na.translate = F)+
stat_summary(fun.y=median, geom="point", size=2, color="red") +
ylab("ΔauPRC to the best PWM") +
xlab("Number of features")+
geom_hline(yintercept = 0, linetype="dotted")+
theme_minimal(base_size = 21) +
theme(panel.grid = element_line(size = 0.5)) +
guides(color=guide_legend("ΔauPRC"))
c
library(Cairo)
Cairo(file='Figure_S9G_CHS_to_GHTS_PR.pdf', type="pdf", width=200, height=200, units="mm")
c
dev.off()
theme_set(theme_get() + theme(text = element_text(family = 'Arial')))
data_summary <- function(x) {
m <- mean(x)
ymin <- m-sd(x)
ymax <- m+sd(x)
return(c(y=m,ymin=ymin,ymax=ymax))
}
df_violin_CHS <- read.csv("./Figure_S9_df_violin_CHS_GHTS_roc.csv")
df_violin_CHS$TF_name <- as.factor(df_violin_CHS$TF_name)
library(MASS)
library(reshape2)
library(reshape)
c = df_violin_CHS %>% dplyr::select(c("TF_name", "roc_auc_test_M_PWM", "dLR", "PWM")) %>%
dcast(TF_name~PWM, value.var = "dLR") %>%
merge(df_violin_CHS, by="TF_name") %>%
mutate( n=factor(Count,levels=c(2,4,8,16,"all")) ) %>%
dplyr::arrange(TF_name, n) %>%
dplyr::group_by(TF_name) %>%
mutate(diffc = cut(`all`, c(-Inf, 0, 0.1, Inf))) %>%
mutate(diffc_m = replace(diffc, diffc=="(0,0.1]", NA)) %>%
ggplot2::ggplot(., aes(y = dLR, x = n)) +
geom_violin() +
geom_path(
aes(group = TF_name, colour = diffc_m),
size = 0.7, alpha = 0.5,
position = position_jitter(width = 0.1, seed = 3922)
) +
geom_point(alpha=0.7, shape=21, size=2, position = position_jitter(width = 0.1, seed = 3922),
colour = "black") +
scale_color_manual(name = "diffc_m",
values = c("(-Inf,0]" = "cyan",
"(0.1, Inf]" = "magenta"),
labels = c("≤ 0", "> 0.1"), na.translate = F)+
stat_summary(fun.y=median, geom="point", size=2, color="red") +
ylab("ΔauROC to the best PWM") +
xlab("Number of features")+
geom_hline(yintercept = 0, linetype="dotted")+
theme_minimal(base_size = 21) +
theme(panel.grid = element_line(size = 0.5)) +
guides(color=guide_legend("ΔauROC"))
c
library(Cairo)
Cairo(file='Figure_S9G_CHS_to_GHTS_ROC.pdf', type="pdf", width=200, height=200, units="mm")
c
dev.off()
theme_set(theme_get() + theme(text = element_text(family = 'Arial')))
data_summary <- function(x) {
m <- mean(x)
ymin <- m-sd(x)
ymax <- m+sd(x)
return(c(y=m,ymin=ymin,ymax=ymax))
}
df_violin_CHS <- read.csv("./Figure_S9_df_violin_GHTS_CHS_pr.csv")
df_violin_CHS$TF_name <- as.factor(df_violin_CHS$TF_name)
library(MASS)
library(reshape2)
library(reshape)
c = df_violin_CHS %>% dplyr::select(c("TF_name", "roc_auc_test_M_PWM", "dLR", "PWM")) %>%
dcast(TF_name~PWM, value.var = "dLR") %>%
merge(df_violin_CHS, by="TF_name") %>%
mutate( n=factor(Count,levels=c(2,4,8,16,"all")) ) %>%
dplyr::arrange(TF_name, n) %>%
dplyr::group_by(TF_name) %>%
mutate(diffc = cut(`all`, c(-Inf, 0, 0.1, Inf))) %>%
mutate(diffc_m = replace(diffc, diffc=="(0,0.1]", NA)) %>%
ggplot2::ggplot(., aes(y = dLR, x = n)) +
geom_violin() +
geom_path(
aes(group = TF_name, colour = diffc_m),
size = 0.7, alpha = 0.5,
position = position_jitter(width = 0.1, seed = 3922)
) +
geom_point(alpha=0.7, shape=21, size=2, position = position_jitter(width = 0.1, seed = 3922),
colour = "black") +
scale_color_manual(name = "diffc_m",
values = c("(-Inf,0]" = "cyan",
"(0.1, Inf]" = "magenta"),
labels = c("≤ 0", "> 0.1"), na.translate = F)+
stat_summary(fun.y=median, geom="point", size=2, color="red") +
ylab("ΔauPRC to the best PWM") +
xlab("Number of features")+
geom_hline(yintercept = 0, linetype="dotted")+
theme_minimal(base_size = 21) +
theme(panel.grid = element_line(size = 0.5)) +
guides(color=guide_legend("ΔauPRC"))
c
library(Cairo)
Cairo(file='Figure_S9H_GHTS_to_CHS_PR.pdf', type="pdf", width=200, height=200, units="mm")
c
dev.off()
theme_set(theme_get() + theme(text = element_text(family = 'Arial')))
data_summary <- function(x) {
m <- mean(x)
ymin <- m-sd(x)
ymax <- m+sd(x)
return(c(y=m,ymin=ymin,ymax=ymax))
}
df_violin_CHS <- read.csv("./Figure_S9_df_violin_GHTS_CHS_roc.csv")
df_violin_CHS$TF_name <- as.factor(df_violin_CHS$TF_name)
library(MASS)
library(reshape2)
library(reshape)
c = df_violin_CHS %>% dplyr::select(c("TF_name", "roc_auc_test_M_PWM", "dLR", "PWM")) %>%
dcast(TF_name~PWM, value.var = "dLR") %>%
merge(df_violin_CHS, by="TF_name") %>%
mutate( n=factor(Count,levels=c(2,4,8,16,"all")) ) %>%
dplyr::arrange(TF_name, n) %>%
dplyr::group_by(TF_name) %>%
mutate(diffc = cut(`all`, c(-Inf, 0, 0.1, Inf))) %>%
mutate(diffc_m = replace(diffc, diffc=="(0,0.1]", NA)) %>%
ggplot2::ggplot(., aes(y = dLR, x = n)) +
geom_violin() +
geom_path(
aes(group = TF_name, colour = diffc_m),
size = 0.7, alpha = 0.5,
position = position_jitter(width = 0.1, seed = 3922)
) +
geom_point(alpha=0.7, shape=21, size=2, position = position_jitter(width = 0.1, seed = 3922),
colour = "black") +
scale_color_manual(name = "diffc_m",
values = c("(-Inf,0]" = "cyan",
"(0.1, Inf]" = "magenta"),
labels = c("≤ 0", "> 0.1"), na.translate = F)+
stat_summary(fun.y=median, geom="point", size=2, color="red") +
ylab("ΔauROC to the best PWM") +
xlab("Number of features")+
geom_hline(yintercept = 0, linetype="dotted")+
theme_minimal(base_size = 21) +
theme(panel.grid = element_line(size = 0.5)) +
guides(color=guide_legend("ΔauROC"))
c
library(Cairo)
Cairo(file='Figure_S9H_GHTS_to_CHS_ROC.pdf', type="pdf", width=200, height=200, units="mm")
c
dev.off()
